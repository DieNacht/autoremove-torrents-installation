#!/bin/bash
#
# https://github.com/DieNacht/autoremove-torrents-installation
# Author: DieNacht
#
# Thanks to amefs and Aniverse

unset LogRootPath LogTimes DebLocation SCLocation LOCKLocation OutputLOG \
      user

AppName="AutoRemove-Torrents"
AppNameLower="autoremove-torrents"
Need_SourceCode=no
pm_action=install

if [[ -f /etc/inexistence/00.Installation/function ]]; then
    source /etc/inexistence/00.Installation/function
else
    source <(wget -qO- https://github.com/Aniverse/inexistence/raw/master/00.Installation/function)
fi

set_variables_log_location
check_var_OutputLOG
debug_log_location
cat_outputlog

function install_python3() {

    echo >> $OutputLOG

    if [[ "$CODENAME" == xenial ]]; then
        apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 F23C5A6CF475977595C89F51BA6932366A755776 >> "$OutputLOG" 2>&1
        LC_ALL=en_US.UTF-8 add-apt-repository ppa:deadsnakes/ppa -y >> "$OutputLOG" 2>&1
        APT_UPGRADE
        apt_install_check     python3.6 python3.6-gdbm python3.6-dev build-essential
        apt_install_separate
        update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.5 1 >> "$OutputLOG" 2>&1
        update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 2 >> "$OutputLOG" 2>&1
    elif [[ "$CODENAME" =~ (jessie|stretch) ]]; then
        apt_install_check    build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev libsqlite3-dev
        apt_install_separate
        if [[ "$CODENAME" == jessie ]]; then
            cat << EOF >> /etc/apt/sources.list
deb http://archive.debian.org/debian jessie-backports main
deb-src http://archive.debian.org/debian jessie-backports main
EOF
            cat << EOF >> /etc/apt/apt.conf
Acquire::Check-Valid-Until "false";
EOF
            APT_UPGRADE
            apt-get -t jessie-backports -y install libssl1.0 >> "$OutputLOG" 2>&1
            if ! version_ge $(dpkg-query -W -f='${Version}' libssl-dev 2>1 | grep -oE "[0-9].[0-9].[0-9]+" | head -1) 1.0.2 ; then
                echo_error "Failed to install libssl 1.0.2l"
                exit 1
            fi
        fi
        wget -nv -O Python-3.7.6.tar.xz https://www.python.org/ftp/python/3.7.6/Python-3.7.6.tar.xz >> "$OutputLOG" 2>&1
        tar -xf Python-3.7.6.tar.xz    >> "$OutputLOG" 2>&1
        cd Python-3.7.6                >> "$OutputLOG" 2>&1
        ./configure                    >> "$OutputLOG" 2>&1
        make -j$(nproc)                >> "$OutputLOG" 2>&1
        make install                   >> "$OutputLOG" 2>&1
        update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.4        1  >> "$OutputLOG" 2>&1        # Debian 8 jessie
        update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.5        1  >> "$OutputLOG" 2>&1        # Debian 9 stretch
        update-alternatives --install /usr/bin/python3 python3 /usr/local/bin/python3.7  2  >> "$OutputLOG" 2>&1
        cd ..                          >> "$OutputLOG" 2>&1
        rm -rf {Python-3.7.6.tar.xz,Python-3.7.6}
        if [[ ! -f /usr/local/lib/python3.7/site-packages/lsb_release.py ]]; then
        	ln -s /usr/lib/python3/dist-packages/lsb_release.py /usr/local/lib/python3.7/site-packages/lsb_release.py >> "$OutputLOG" 2>&1
        fi
    else
        apt_install_check    python3-pip python3-setuptools python3-dev build-essential
        apt_install_separate
    fi

    python3_ver=$(python3 -V | grep -oE "[0-9.]+")

    status_lock=python3
    echo "status_lock=$status_lock" > /tmp/Variables
    rm -f /tmp/$status_lock.1.lock /tmp/$status_lock.2.lock 
    if version_ge $python3_ver 3.6; then
        touch /tmp/$status_lock.1.lock
    else
        touch /tmp/$status_lock.2.lock
    fi
    [[ -f /tmp/$status_lock.1.lock ]] && touch $LOCKLocation/python3.lock
    echo >> $OutputLOG

}

function install_art() {

    echo >> $OutputLOG

    wget -nv -O get-pip.py https://bootstrap.pypa.io/get-pip.py >> "$OutputLOG" 2>&1
    python3 get-pip.py --force-reinstall              >> "$OutputLOG" 2>&1
    pip3 install --upgrade pip                        >> "$OutputLOG" 2>&1
    pip3 install setuptools==45.3.0                   >> "$OutputLOG" 2>&1

    pip3 install --upgrade pyopenssl                  >> "$OutputLOG" 2>&1
    pip3 install --upgrade cryptography               >> "$OutputLOG" 2>&1
    pip3 install --ignore-installed autoremove-torrents==1.5.2                  >> "$OutputLOG" 2>&1

    status_lock=$AppNameLower
    echo "status_lock=$status_lock" > /tmp/Variables
    rm -f /tmp/$status_lock.1.lock /tmp/$status_lock.2.lock 
    # if [[ -n $(which autoremove-torrents) ]]; then
    if [[ $(autoremove-torrents -v -l /tmp 2>&1 | head -1 | grep -oP "[0-9.]+" | tail -1) == 1.5.2 ]]; then
        touch /tmp/$status_lock.1.lock
    else
        touch /tmp/$status_lock.2.lock
    fi
    [[ -f /tmp/$status_lock.1.lock ]] && touch $LOCKLocation/$AppNameLower.lock
    echo >> $OutputLOG

}

if [[ ! -f $LOCKLocation/python3.lock ]]; then
    echo_task "Installing Python3 ..."
    install_python3 & spinner $!
    check_status $status_lock
    echo -e "\n\n\n\n\n" >> "$OutputLOG"
    lines                >> "$OutputLOG"
    echo -e "\n\n\n\n\n" >> "$OutputLOG"
fi

echo_task "Installing $AppName ..."
install_art & spinner $!
check_status $status_lock
